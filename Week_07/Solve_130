class Solve_130 {
    public void solve(char[][] board) {
        if (board.length == 0 || board[0].length == 0){
            return ;
        }
        int row = board.length;
        int col = board[0].length;
        for (int i = 0 ; i < row ; i++){
            for (int j =0 ; j < col; j++){
                if ( (i == 0 || i == row - 1 || j == 0 || j == col - 1 ) && board[i][j] == 'O' ){
                    dfs(board, i, j);
                }
            }
        }
        for (int i = 0 ; i < row ; i++){
            for (int j = 0 ; j < col ; j++){
                if (board[i][j] == '@'){
                    board[i][j] = 'O';
                }else if(board[i][j] == 'O'){
                    board[i][j] = 'X';
                }
            }
        }

    }

    public void dfs(char[][] board ,int row, int col){
        if (row >= board.length || row < 0 || col >= board[0].length || col < 0 || board[row][col] != 'O'){
            return ;
        }

        board[row][col] = '@';
        dfs(board, row + 1, col);
        dfs(board, row - 1, col);
        dfs(board, row, col + 1);
        dfs(board, row, col - 1);
    }
}